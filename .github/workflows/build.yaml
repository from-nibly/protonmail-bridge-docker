name: build from source

on:
  push:
    branches:
      - master
      - dev
    paths:
      - .github/workflows/build.yaml
      - build/*
  pull_request:
    paths:
      - .github/workflows/build.yaml
      - build/*

env:
  DOCKER_REPO: ghcr.io/from-nibly/protonmail-bridge
  PLATFORMS: linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set version
        id: version
        run: echo "::set-output name=version::`cat build/VERSION`"
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${ghcr.io/from-nibly/protonmail-bridge}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Build image without push to registry
        uses: docker/build-push-action@v2
        with:
          context: ./build
          file: ./build/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: localhost:5000/protonmail-bridge:latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/dev' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: ./build
          file: ./build/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ steps.repo.outputs.repo }}:build
            ${{ steps.repo.outputs.repo }}:${{ steps.version.outputs.version }}-build
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
